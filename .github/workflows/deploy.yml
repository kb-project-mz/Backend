name: Deploy Backend to AWS

on:
  pull_request:
    types:
      - closed
    branches:
      - main # main 브랜치로의 PR일 때만 실행
  push:
    branches:
      - main # main 브랜치에 직접 push될 때 실행

jobs:
  deploy:
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout 코드
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Java 환경 설정
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Gradle 권한 설정 및 Build with Gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      # 4. SSH Key 설정
      - name: Add SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/fingertips.pem
          chmod 600 ~/.ssh/fingertips.pem

      # 5. Upload env.properties to the server
      - name: Upload env.properties
        run: |
          echo "${{ secrets.ENV_PROPERTIES_CONTENT }}" > src/main/resources/env.properties
          scp -o StrictHostKeyChecking=no -i ~/.ssh/fingertips.pem src/main/resources/env.properties ubuntu@${{ secrets.SERVER_IP }}:${{ secrets.TOMCAT_PATH }}/webapps/ROOT/WEB-INF/classes/

      # 6. Deploy ROOT.war to Tomcat server
      - name: Deploy ROOT.war
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/fingertips.pem build/libs/ROOT.war ubuntu@${{ secrets.SERVER_IP }}:${{ secrets.TOMCAT_PATH }}/webapps/
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/fingertips.pem ubuntu@${{ secrets.SERVER_IP }} "sudo ${{ secrets.TOMCAT_PATH }}/bin/shutdown.sh && sudo ${{ secrets.TOMCAT_PATH }}/bin/startup.sh"
